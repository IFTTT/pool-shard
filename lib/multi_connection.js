// Generated by CoffeeScript 1.6.3
(function() {
  var Connection, MultiConnection, async,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __slice = [].slice;

  async = require('async');

  Connection = require('./connection');

  MultiConnection = (function() {
    function MultiConnection(poolsAndShards) {
      this.poolsAndShards = poolsAndShards;
      this.query = __bind(this.query, this);
    }

    MultiConnection.prototype.query = function() {
      var connections, doneQuery, pool, schema, schemas, sql, _i, _j, _k, _len, _len1, _ref, _ref1;
      sql = 2 <= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), doneQuery = arguments[_i++];
      connections = [];
      _ref = this.poolsAndShards;
      for (_j = 0, _len = _ref.length; _j < _len; _j++) {
        _ref1 = _ref[_j], pool = _ref1[0], schemas = _ref1[1];
        for (_k = 0, _len1 = schemas.length; _k < _len1; _k++) {
          schema = schemas[_k];
          connections.push(new Connection(pool, schema));
        }
      }
      return async.map(connections, function(connection, done) {
        return connection.query.apply(connection, __slice.call(sql).concat([done]));
      }, doneQuery);
    };

    return MultiConnection;

  })();

  module.exports = MultiConnection;

}).call(this);
