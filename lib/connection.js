// Generated by CoffeeScript 1.6.3
(function() {
  var Connection, async, inspect, logger, print, puts, util, _ref,
    __slice = [].slice;

  util = require("../util");

  _ref = require("util"), puts = _ref.puts, print = _ref.print, inspect = _ref.inspect;

  logger = util.logger;

  async = require('async');

  Connection = (function() {
    function Connection(pool, schema) {
      this.pool = pool;
      this.schema = schema;
    }

    Connection.prototype.query = function() {
      var client, queryDone, result, sql, sqlErr, _i,
        _this = this;
      sql = 2 <= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), queryDone = arguments[_i++];
      logger.info(sql);
      client = null;
      result = null;
      sqlErr = null;
      return async.series([
        function(done) {
          return _this.pool.acquire(function(err, _client) {
            client = _client;
            return done(err);
          });
        }, function(done) {
          return client.query("SET search_path TO '" + _this.schema + "'", done);
        }, function(done) {
          return client.query.apply(client, __slice.call(sql).concat([function(_sqlErr, _result) {
            if (_sqlErr) {
              logger.error(inspect(_sqlErr));
            }
            result = _result;
            sqlErr = _sqlErr;
            return done();
          }]));
        }, function(done) {
          _this.pool.release(client);
          return done();
        }
      ], function(err) {
        return queryDone(err || sqlErr, result);
      });
    };

    return Connection;

  })();

  module.exports = Connection;

}).call(this);
